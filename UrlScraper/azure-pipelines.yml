trigger:

- main

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: 'b0cf3d2f-716a-46f6-ad18-f38a066e9863'
  imageRepository: 'urlscraper'
  containerRegistry: 'shoppinghelper.azurecr.io'
  dockerfilePath: 'Dockerfile'
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
- stage: Helm
  displayName: Package And Publish Helm Chart
  jobs:
  - job: PackageAndPublish
    displayName: Package Helm Chart and Publish as Artifact
    steps:
    - task: HelmDeploy@0
      displayName: Package 
      inputs:
        command: 'package'
        chartPath: 'helm-charts/worker'
        updateDependency: true
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/worker-0.1.0.tgz'
        ArtifactName: 'Chart'
        publishLocation: 'Container'
- stage: Prod
  displayName: Deploy to Production
  jobs:
  - job: Deploy
    displayName: Deploy to Production
    steps:
    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'Chart'
        itemPattern: 
        downloadPath: '$(System.DefaultWorkingDirectory)'
        checkDownloadedFiles: true
    - task: CmdLine@2
      inputs:
        script: |
          echo "Structure of work folder of this pipeline:"
          tree $(Agent.WorkFolder)/1

          echo "Build.ArtifactStagingDirectory:" 
          echo "$(Build.ArtifactStagingDirectory)"

          echo "Build.BinariesDirectory:" 
          echo "$(Build.BinariesDirectory)"

          echo "Build.SourcesDirectory:"
          echo "$(Build.SourcesDirectory)"
    - task: HelmDeploy@0
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceConnection: 'aks-shoppinghelper-prod'
        namespace: 'scrapeservice'
        command: 'upgrade'
        chartType: 'FilePath'
        chartPath: 'Chart/worker-0.1.0.tgz'
        releaseName: 'urlscraper'
        overrideValues: 'tag=$(tag)'
        valueFile: 'Urlscraper/values.yaml'
